/* lib/react/Group/Group.module.css */
.Group_Group {
  display: flex;
  gap: 0.1em;
}

/* lib/react/Button/Button.module.css */
.Button_Button {
  font: unset;
  border: none;
  cursor: pointer;
  padding: var(--default-padding);
  text-align: center;
}
.Button_fluid {
  width: 100%;
}
.Button_Button[variant=cta] {
  color: var(--colour-background);
  border-radius: var(--default-border-radius);
  box-shadow: var(--default-boxshadow);
  fill: var(--colour-background);
  text-transform: capitalize;
}
.Button_Button[variant=cta][appearance=affirming] {
  background-color: var(--colour-success);
}
.Button_Button[variant=cta][appearance=basic] {
  background-color: var(--colour-light);
  border-color: var(--colour-medium);
  color: var(--colour-text-deemphasised);
  fill: var(--colour-text-deemphasised);
}
.Button_Button[variant=cta][appearance=danger] {
  background-color: var(--colour-danger);
}
.Button_Button[variant=cta][appearance=primary] {
  background-color: var(--colour-primary);
}
.Button_Button[variant=cta][appearance=warning] {
  background-color: var(--colour-warning);
}
.Button_Button[variant=cta] > i[role=img] {
  font-size: 2em;
}
.Button_Button[variant=glyph] {
  background-color: unset;
}
.Button_Button[variant=glyph][appearance=danger] {
  color: var(--colour-danger);
  fill: var(--colour-danger);
}
.Button_Button[variant=glyph][appearance=primary] {
  color: var(--colour-primary);
  fill: var(--colour-primary);
}
.Button_Button[variant=glyph][appearance=affirming] {
  color: var(--colour-success);
  fill: var(--colour-success);
}
.Button_Button[variant=glyph][appearance=warning] {
  color: var(--colour-warning);
  fill: var(--colour-warning);
}
.Button_ButtonGroup .Button_Button {
  flex: 1;
}
.Button_ButtonGroup .Button_Button:not(:last-child) {
  border-top-right-radius: unset;
  border-bottom-right-radius: unset;
}
.Button_ButtonGroup .Button_Button:not(:first-child) {
  border-top-left-radius: unset;
  border-bottom-left-radius: unset;
}

/* lib/react/FileInput/FileInput.module.css */
.FileInput_FileInput {
  cursor: pointer;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: calc(var(--grid-gutter) / 2);
}
.FileInput_FileInputPreviews {
  flex-direction: row;
  position: relative;
}
.FileInput_FileInputPreviews > .FileInput_FileInputButton {
  --default-border-radius: unset;
  bottom: 0;
  opacity: 0;
  position: absolute;
  transition-duration: var(--default-transition-duration);
  transition-property: opacity;
  transition-timing-function: var(--default-transition-easing);
}
.FileInput_FileInputPreviews:hover > .FileInput_FileInputButton {
  opacity: 1;
}
.FileInput_FileInputPreview {
  align-content: center;
  background-image: repeating-conic-gradient(rgb(0 0 0 / 1%) 0% 25%, rgb(100 100 100 / 10%) 0% 50%);
  background-position: 0 0;
  background-size: 2em 2em;
  border: 1px solid var(--border-colour-normal);
  display: flex;
  justify-content: center;
  max-width: 100%;
  width: max-content;
}
.FileInput_FileInputControl {
  display: none;
}
.FileInput_FileInputButton {
  display: block;
  width: 100%;
}

/* lib/react/Field/Field.module.css */
.Field_FieldContainer {
  gap: calc(var(--grid-gutter) / 2);
}
.Field_FieldContainer[arrangement=inline] {
  align-items: baseline;
  grid-template-columns: max-content 1fr;
}
.Field_FieldContainer[arrangement=inline],
.Field_FieldContainer[arrangement=stacked] {
  display: grid;
}
.Field_FieldContainer[arrangement=stacked] {
  justify-content: space-between;
}
.Field_FieldContainer[arrangement=compact],
.Field_FieldContainer[arrangement=stacked],
.Field_FieldContainer[arrangement=stand-alone] {
  align-items: baseline;
}
.Field_FieldContainer[arrangement=compact] {
  gap: unset;
  position: relative;
}
.Field_FieldContainer[variant=cta],
.Field_FieldContainer[variant=glyph] {
  align-items: stretch;
  box-shadow: unset;
  display: flex;
  padding: unset;
}
.Field_FieldContainer[arrangement=compact],
.Field_FieldContainer[arrangement=stand-alone] {
  display: inline-flex;
}
.Field_Fluid {
  grid-template-columns: 100%;
}
.Field_Fluid,
.Field_Fluid .Field_Field {
  flex: 1;
}
.Field_Fluid .Field_InnerWrapper {
  flex: none;
}
.Field_Field {
  background-color: var(--colour-background);
  border: 1px solid var(--colour-medium);
  border-radius: var(--default-border-radius);
  padding: var(--default-padding);
}
.Field_Field[variant=cta]:focus + .Field_InnerWrapper > .Field_Label,
.Field_Field:focus {
  outline-color: var(--colour-primary);
}
.Field_Field:disabled {
  cursor: default;
}
.Field_Field:disabled,
.Field_Field[readonly] {
  background-color: var(--colour-medium);
  color: var(--colour-muted);
}
.Field_Field[readonly],
.Field_Field[readonly] + .Field_InnerWrapper > .Field_Label {
  cursor: not-allowed;
}
.Field_Field:not([variant=cta]):required + .Field_InnerWrapper > .Field_Label::after {
  content: "*";
  margin-left: 0.1em;
}
.Field_Field[type=checkbox],
.Field_Field[type=radio] {
  margin: unset;
}
.Field_Field[type=color] {
  box-sizing: content-box;
}
.Field_Field[type=date],
.Field_Field[type=datetime],
.Field_Field[type=datetime-local],
.Field_Field[type=time] {
  font: inherit;
}
.Field_Field[type=number] {
  text-align: right;
}
.Field_Field[type=search] {
  padding: var(--default-padding) calc(var(--default-padding) + 1.5em);
}
.Field_Field[type=search]::-webkit-search-cancel-button,
.Field_Field[type=search]::-webkit-search-decoration {
  appearance: none;
}
.Field_SearchSubmit {
  left: 0;
  order: -1;
  position: absolute;
}
.Field_SearchReset {
  position: absolute;
  right: 0;
}
select.Field_Field {
  appearance: none;
  background-image: url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20fill%3D%22currentColor%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20d%3D%22M1.646%204.646a.5.5%200%200%201%20.708%200L8%2010.293l5.646-5.647a.5.5%200%200%201%20.708.708l-6%206a.5.5%200%200%201-.708%200l-6-6a.5.5%200%200%201%200-.708z%22%2F%3E%3C%2Fsvg%3E);
  background-position: right 0.5em center;
  background-repeat: no-repeat;
  background-size: 0.65em auto;
  padding-right: calc(1em + var(--default-padding));
}
textarea.Field_Field {
  line-height: inherit;
}
.Field_FieldContainer:not([switch]) .Field_InnerWrapper {
  order: -1;
}
.Field_FieldContainer[touched] .Field_Field[variant=cta]:invalid:focus + .Field_InnerWrapper > .Field_Label,
.Field_FieldContainer[touched] .Field_Field[variant=glyph]:invalid:focus + .Field_InnerWrapper > .Field_Label {
  outline: 2px solid;
}
.Field_FieldContainer[touched] .Field_Field[variant=cta]:invalid:focus + .Field_InnerWrapper > .Field_Label,
.Field_FieldContainer[touched] .Field_Field[variant=glyph]:invalid:focus + .Field_InnerWrapper > .Field_Label,
.Field_FieldContainer[touched] .Field_Field:invalid:focus {
  outline-color: var(--colour-danger);
}
.Field_FieldContainer[touched] .Field_Field:invalid,
.Field_FieldContainer[touched] .Field_Field[variant=cta]:invalid + .Field_InnerWrapper > .Field_Label,
.Field_FieldContainer[touched] .Field_Field[variant=glyph]:invalid + .Field_InnerWrapper > .Field_Label,
.Field_Error {
  border-color: var(--colour-danger);
}
.Field_FieldContainer[touched] .Field_Field:invalid + .Field_InnerWrapper {
  color: var(--colour-danger);
}
.Field_Field[variant=cta],
.Field_Field[variant=glyph] {
  height: 0;
  position: absolute;
  width: 0;
  z-index: -1;
}
.Field_Field[variant=cta] + .Field_InnerWrapper > .Field_Label {
  background-color: var(--colour-light);
  border: 1px solid var(--colour-medium);
  border-radius: inherit;
  color: var(--colour-text-deemphasised);
  fill: var(--colour-text-deemphasised);
}
.Field_Field[variant=cta]:checked + .Field_InnerWrapper > .Field_Label {
  background-color: var(--colour-primary);
  color: var(--colour-background);
  fill: var(--colour-background);
}
.Field_Field[variant=cta] + .Field_InnerWrapper > .Field_Label,
.Field_Field[variant=glyph] + .Field_InnerWrapper > .Field_Label {
  display: flex;
  flex-direction: column;
  flex: 1;
  justify-content: center;
  padding: var(--default-padding);
}
.Field_Field:not(:checked) + .Field_InnerWrapper > .Field_Label[variant=glyph][appearance] {
  color: unset;
  fill: unset;
}
.Field_Field:checked + .Field_InnerWrapper > .Field_Label[variant=glyph][appearance=danger] {
  color: var(--colour-danger);
  fill: var(--colour-danger);
}
.Field_Field:checked + .Field_InnerWrapper > .Field_Label[variant=glyph][appearance=primary] {
  color: var(--colour-primary);
  fill: var(--colour-primary);
}
.Field_Field:checked + .Field_InnerWrapper > .Field_Label[variant=glyph][appearance=affirming] {
  color: var(--colour-success);
  fill: var(--colour-success);
}
.Field_Field:checked + .Field_InnerWrapper > .Field_Label[variant=glyph][appearance=warning] {
  color: var(--colour-warning);
  fill: var(--colour-warning);
}
.Field_Field[variant=toggle] {
  align-items: center;
  appearance: none;
  -webkit-appearance: none;
  background-color: #eee;
  border-radius: 1rem;
  display: inline-flex;
  flex-direction: row;
  height: 1em;
  justify-content: center;
  padding: unset;
  width: 2em;
}
.Field_Field[variant=toggle]::after {
  align-self: flex-end;
  background-color: #aaa;
  border-radius: 100%;
  content: "";
  display: inline-block;
  height: 100%;
  scale: 1.3;
  transition-property: background-color, translate;
  transition-duration: var(--default-transition-duration);
  transition-timing-function: var(--default-transition-easing);
  translate: calc(-50% + 1px);
  width: 50%;
}
.Field_Field[variant=toggle]:checked::after {
  background-color: var(--colour-primary);
  translate: 50%;
}
.Field_Field[variant=toggle]:disabled::after {
  filter: saturate(0.4);
}
.Field_Field[variant=toggle][appearance=danger]:checked::after {
  background-color: var(--colour-danger);
}
.Field_Field[variant=toggle][appearance=success]:checked::after {
  background-color: var(--colour-success);
}
.Field_InnerWrapper {
  border-radius: inherit;
  display: flex;
  flex: 1;
  position: relative;
}
.Field_Field:focus + .Field_InnerWrapper > .Field_Error,
.Field_FieldContainer:hover .Field_Error {
  opacity: 1;
  pointer-events: all;
}
.Field_Error {
  background-color: var(--colour-background);
  border-radius: var(--default-border-radius);
  border: 1px solid;
  box-shadow: var(--default-boxshadow);
  color: inherit;
  display: inline-block;
  left: calc(-0.5em - 1px);
  margin-left: 0;
  margin-right: 0;
  opacity: 0;
  padding: 0.5em;
  pointer-events: none;
  position: absolute;
  top: 0;
  transition: opacity var(--default-transition-duration) var(--default-transition-easing);
  translate: 0 calc(-100% - 1em);
  width: max-content;
  z-index: 1;
}
.Field_Error::after {
  background-color: inherit;
  border: inherit;
  bottom: calc(-0.5em - 2px);
  clip-path: polygon(0 0, 45% 55%, 100% 100%, 100% 0%);
  content: "";
  display: block;
  height: 0.5em;
  left: calc(0.8em + 1px);
  position: absolute;
  rotate: 135deg;
  translate: -50% -50%;
  width: 0.5em;
}

/* lib/react/Form/Form.module.css */
.Form_Form,
fieldset {
  display: grid;
  gap: var(--grid-gutter);
}

/* node_modules/reset.css/reset.css */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* docs/Demo.module.css */
.Demo_Column {
  display: flex;
  flex-direction: column;
  flex: 1;
  gap: 1rem;
}
.Demo_Output {
  font-family: monospace;
}
.Demo_DataHeading {
  background-color: var(--colour-medium);
  border-radius: var(--default-border-radius) var(--default-border-radius) 0 0;
  font-weight: bold;
}
.Demo_DataHeading,
.Demo_Data {
  display: block;
  padding: 1rem;
}
.Demo_Data {
  background-color: var(--colour-light);
  border-radius: 0 0 var(--default-border-radius) var(--default-border-radius);
  line-height: 1.4;
  white-space: pre-wrap;
}
/*# sourceMappingURL=app.css.map */
